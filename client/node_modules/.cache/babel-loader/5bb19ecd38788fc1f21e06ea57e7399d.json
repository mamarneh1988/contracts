{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/Documents/usecases/contracts/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/ContractReg.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\nimport ipfs from './ipfs';\nimport bootstrap from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport parse from 'html-react-parser';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      htmlTable: '',\n      htmlBody: '',\n      imageHash: null,\n      buffer: null,\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = SimpleStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          accounts,\n          contract: instance\n        }, this.runExample);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.handleInputChanges = async event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      console.log(\"name\" + nam);\n      console.log(\"val\" + val);\n      this.setState({\n        [nam]: val\n      });\n    };\n\n    this.capturefile = async event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        console.log(\"buffer\", Buffer(reader.result));\n        this.setState({\n          buffer: Buffer(reader.result)\n        });\n      };\n    };\n\n    this.getAllContracts = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            accounts = _this$state.accounts,\n            contract = _this$state.contract;\n      let contCount = await contract.methods.contractCounter().call();\n      let html_table = '';\n\n      for (let i = 1; i <= contCount; i++) {\n        let res = await contract.methods.contracts(i).call();\n        html_table = html_table + '<tr><td>' + res[0] + '</td><td>' + res[1] + '</td><td>' + res[2] + '</td><td>' + res[3] + '</td><td>' + res[4] + '</td><td>' + res[5] + '</td><td>' + res[6] + '</td><td>' + res[7] + '</td><td>' + res[8] + '</td></tr>';\n      }\n\n      this.setState({\n        htmlTable: html_table\n      });\n    };\n\n    this.getContracts = async event => {\n      event.preventDefault();\n      const _this$state2 = this.state,\n            accounts = _this$state2.accounts,\n            contract = _this$state2.contract;\n      let res = await contract.methods.getContractByID(this.state.contract_id).call();\n      let contCount = await contract.methods.contractCounter().call();\n      let html_body = '<ul className=\"list-group\">';\n\n      for (let i = 0; i < 8; i++) {\n        html_body = html_body + '<li className=\"list-group-item\">' + res[i] + '</li>';\n      }\n\n      html_body = html_body + '</ul>';\n      html_body = html_body + '<img = src=\"https://ipfs.infura-ipfs.io/ipfs/' + res[6] + '\" height=200 width=200>';\n      this.setState({\n        htmlBody: html_body\n      });\n      console.log(html_body);\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state3 = this.state,\n            accounts = _this$state3.accounts,\n            contract = _this$state3.contract;\n      ipfs.add(this.state.buffer, async (error, resutls) => {\n        console.log('ipfs results', resutls);\n        const temp = resutls[0].hash;\n        this.setState({\n          imageHash: temp\n        });\n        await contract.methods.createContract(this.state.contractid, //  uint256 _id,\n        this.state.ownername, //  string memory _ownerName,\n        this.state.contractdesc, //  string memory _contDesc,\n        this.state.contracttype, // uint256 _contType,\n        this.state.startdate, // string memory _startDate,\n        this.state.enddate, //string memory _endDate,\n        this.state.municipalities, // string memory _municililaty,\n        this.state.imageHash // string memory _imageHash\n        ).send({\n          from: accounts[0]\n        });\n      });\n    };\n\n    this.runExample = async () => {\n      const _this$state4 = this.state,\n            accounts = _this$state4.accounts,\n            contract = _this$state4.contract; // Stores a given value, 5 by default.\n      //await contract.methods.set(5).send({ from: accounts[0] });\n      // Get the value from the contract to prove it worked.\n      // const response = await contract.methods.get().call();\n      // Update state with the result.\n      // this.setState({ storageValue: response });\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Welcome to the second use case session!\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contractid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Contract ID\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"contractid\",\n      placeholder: \"contractid\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"ownername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Owner Name\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"ownername\",\n      placeholder: \"Owner Name\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"contractdesc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Contract Description\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"contractdesc\",\n      placeholder: \"Contract Description\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"contracttype\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Contract Type\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"contracttype\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Land Contract\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Home Contract\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Shop Contract\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Building Contract\")), React.createElement(\"label\", {\n      htmlFor: \"municipalities\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Municipality\"), React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"municipalities\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Khan Younes\"), React.createElement(\"option\", {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Deir Al Balah\"), React.createElement(\"option\", {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Gaza\"), React.createElement(\"option\", {\n      value: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Rafah\"), React.createElement(\"option\", {\n      value: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Jenin\"), React.createElement(\"option\", {\n      value: \"6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Nablus\"), React.createElement(\"option\", {\n      value: \"7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Jerusalem\"), React.createElement(\"option\", {\n      value: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Haifa\"), React.createElement(\"option\", {\n      value: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Acre\")), React.createElement(\"label\", {\n      htmlFor: \"startdate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"startdate\",\n      placeholder: \"Start Date \",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"enddate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      name: \"enddate\",\n      placeholder: \"End Date\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"contractimage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Contract Image\"), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"contractimage\",\n      placeholder: \"Contract Image\",\n      onChange: this.capturefile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contract_id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Contract ID\"), React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      name: \"contract_id\",\n      placeholder: \"Contract ID\",\n      onChange: this.handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.getContracts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"get contracts\"), React.createElement(\"div\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, parse(this.state.htmlBody))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.getAllContracts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"list all contracts\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"ID\", React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \" Owner Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Contract Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Municipality\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Start Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"End Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Contract Description\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Image\")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, parse(this.state.htmlTable)))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macpro/Documents/usecases/contracts/client/src/App.js"],"names":["React","Component","SimpleStorageContract","getWeb3","ipfs","bootstrap","parse","App","state","htmlTable","htmlBody","imageHash","buffer","storageValue","web3","accounts","contract","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","runExample","error","alert","console","handleInputChanges","event","nam","target","name","val","value","log","capturefile","preventDefault","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","Buffer","result","getAllContracts","contCount","methods","contractCounter","call","html_table","i","res","contracts","getContracts","getContractByID","contract_id","html_body","handleSubmit","add","resutls","temp","hash","createContract","contractid","ownername","contractdesc","contracttype","startdate","enddate","municipalities","send","from","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/ContractReg.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nimport ipfs from './ipfs';\n\nimport bootstrap from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport parse from 'html-react-parser';\n\n\n\n\nclass App extends Component {\n  state = { htmlTable: '', htmlBody: '', imageHash: null, buffer: null, storageValue: 0, web3: null, accounts: null, contract: null };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  handleInputChanges = async (event) => {\n\n    let nam = event.target.name;\n    let val = event.target.value;\n    console.log(\"name\" + nam);\n    console.log(\"val\" + val);\n    this.setState({\n      [nam]: val\n    });\n  }\n\n  capturefile = async (event) => {\n    event.preventDefault();\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      console.log(\"buffer\", Buffer(reader.result));\n      this.setState({ buffer: Buffer(reader.result) })\n    }\n\n  }\n  getAllContracts = async (event) => {\n\n    event.preventDefault();\n    const { accounts, contract } = this.state;\n    let contCount = await contract.methods.contractCounter().call();\n\n    let html_table = '';\n\n    for (let i = 1; i <= contCount; i++) {\n\n      let res = await contract.methods.contracts(i).call();\n\n      html_table = html_table + '<tr><td>' + res[0] + '</td><td>'\n        + res[1] + '</td><td>'\n        + res[2] + '</td><td>'\n        + res[3] + '</td><td>'\n        + res[4] + '</td><td>'\n        + res[5] + '</td><td>'\n        + res[6] + '</td><td>'\n        + res[7] + '</td><td>'\n        + res[8] + '</td></tr>';\n\n    }\n\n    this.setState({ htmlTable: html_table });\n  }\n  getContracts = async (event) => {\n\n    event.preventDefault();\n    const { accounts, contract } = this.state;\n    let res = await contract.methods.getContractByID(this.state.contract_id).call();\n    let contCount = await contract.methods.contractCounter().call();\n    let html_body = '<ul className=\"list-group\">';\n\n    for (let i = 0; i < 8; i++) {\n      html_body = html_body + '<li className=\"list-group-item\">' + res[i] + '</li>';\n\n    }\n    html_body = html_body + '</ul>';\n    html_body = html_body + '<img = src=\"https://ipfs.infura-ipfs.io/ipfs/' + res[6] + '\" height=200 width=200>'\n\n    this.setState({ htmlBody: html_body })\n    console.log(html_body);\n  }\n  handleSubmit = async (event) => {\n    event.preventDefault();\n    const { accounts, contract } = this.state;\n\n    ipfs.add(this.state.buffer, async (error, resutls) => {\n      console.log('ipfs results', resutls);\n      const temp = resutls[0].hash;\n      this.setState({ imageHash: temp });\n      await contract.methods.createContract(\n        this.state.contractid,//  uint256 _id,\n        this.state.ownername,//  string memory _ownerName,\n        this.state.contractdesc,//  string memory _contDesc,\n        this.state.contracttype,// uint256 _contType,\n        this.state.startdate,// string memory _startDate,\n        this.state.enddate,//string memory _endDate,\n        this.state.municipalities,// string memory _municililaty,\n        this.state.imageHash// string memory _imageHash\n\n      ).send({ from: accounts[0] });\n\n    });\n\n\n\n\n\n\n  }\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    //await contract.methods.set(5).send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    // const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    // this.setState({ storageValue: response });\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h1>Welcome to the second use case session!</h1>\n              <div className=\"form-group\">\n\n                <form onSubmit={this.handleSubmit}>\n\n                  <label htmlFor=\"contractid\">Contract ID</label>\n                  <input className=\"form-control\" name=\"contractid\" placeholder=\"contractid\" onChange={this.handleInputChanges}  ></input>\n                  <label htmlFor=\"ownername\">Owner Name</label>\n                  <input className=\"form-control\" name=\"ownername\" placeholder=\"Owner Name\" onChange={this.handleInputChanges}  ></input>\n                  <label htmlFor=\"contractdesc\">Contract Description</label>\n                  <input className=\"form-control\" name=\"contractdesc\" placeholder=\"Contract Description\" onChange={this.handleInputChanges}   ></input>\n\n                  <label htmlFor=\"contracttype\" >Contract Type</label>\n                  <select className=\"form-control\" name=\"contracttype\" onChange={this.handleInputChanges} >\n                    <option value=\"1\">Land Contract</option>\n                    <option value=\"2\">Home Contract</option>\n                    <option value=\"3\">Shop Contract</option>\n                    <option value=\"4\">Building Contract</option>\n                  </select>\n\n                  <label htmlFor=\"municipalities\">Municipality</label>\n\n                  <select className=\"form-control\" name=\"municipalities\" onChange={this.handleInputChanges}  >\n                    <option value=\"1\">Khan Younes</option>\n                    <option value=\"2\">Deir Al Balah</option>\n                    <option value=\"3\">Gaza</option>\n                    <option value=\"4\">Rafah</option>\n                    <option value=\"5\">Jenin</option>\n                    <option value=\"6\">Nablus</option>\n                    <option value=\"7\">Jerusalem</option>\n                    <option value=\"8\">Haifa</option>\n                    <option value=\"9\">Acre</option>\n                  </select>\n\n                  <label htmlFor=\"startdate\">Start Date</label>\n                  <input className=\"form-control\" name=\"startdate\" placeholder=\"Start Date \" onChange={this.handleInputChanges}   ></input>\n\n                  <label htmlFor=\"enddate\">End Date</label>\n                  <input className=\"form-control\" name=\"enddate\" placeholder=\"End Date\" onChange={this.handleInputChanges}  ></input>\n\n                  <label htmlFor=\"contractimage\">Contract Image</label>\n                  <input type=\"file\" className=\"form-control\" name=\"contractimage\" placeholder=\"Contract Image\" onChange={this.capturefile}  ></input>\n\n                  <input type=\"submit\" className=\"btn btn-primary\"  ></input>\n                </form>\n              </div>\n\n            </div>\n          </div>\n          <div className=\"row\">\n\n            <form>\n              <label htmlFor=\"contract_id\">Contract ID</label>\n              <input type=\"number\" className=\"form-control\" name=\"contract_id\" placeholder=\"Contract ID\" onChange={this.handleInputChanges}  ></input>\n\n            </form>\n\n            <button className=\"btn btn-primary\" onClick={this.getContracts}>get contracts</button>\n            <div className=\"result\">\n              <p>{parse(this.state.htmlBody)}</p>\n            </div>\n\n            <div className=\"row\">\n            <button className=\"btn btn-primary\" onClick={this.getAllContracts}>list all contracts</button>\n              <table>\n                <thead></thead>\n                <tr>ID<th></th>\n                  <th> Owner Name</th>\n                  <th>Contract Type</th>\n                  <th>Address</th>\n                  <th>Municipality</th>\n                  <th>Start Date</th>\n                  <th>End Date</th>\n                  <th>Contract Description</th>\n                  <th>Image</th></tr>\n                <tbody>\n                {parse(this.state.htmlTable)}\n                </tbody>\n                \n              </table>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}